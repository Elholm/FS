# -*- coding: utf-8 -*-
"""fs_data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c6SG3jOWZQL8L2UAFS6aeYv6IAK2LrtD

#The new FS SLA Calculation program
"""

import openpyxl
import pandas as pd
import numpy as np
import tkinter as tk
from tkinter import filedialog as fd
import os, time

# !pip install pyinstaller # only used in colab for creating executable

# !pyinstaller --onefile fs_data.py

"""## Functions

### Pre-definifions
"""
"""### Actual functions"""

# !wget https://github.com/Elholm/FS/raw/master/FS%20SLA%20Skabelon.xlsm # only used in colab for downloading FS SLA Skabelon

def get_version(wb_path):
    wb = load_wb(wb_path)
    støtteark = wb["Støtteark"]
    C1 = støtteark["C1"].value
    version = C1.split(" ")[1]
    return version

def convert_ejd(nr):
    old_nr = nr
    left, right = old_nr.split("-")
    while len(left) < 3:
        left_list = list(left)
        left_list = ["0"] + left_list
        left = ''.join(left_list)
    while len(right) < 3:
        right_list = list(right)
        right_list = ["0"] + right_list
        right = ''.join(right_list)
    new_nr = f"{left}-{right}"
    return new_nr

def get_wb(wb_path):
  wb = openpyxl.load_workbook(wb_path,data_only = True)
  return wb

def get_sheetnames(wb):
  return wb.sheetnames


def get_worksheets(wb):
  if "FS Aftale" in wb.sheetnames:
    aftale = wb["FS Aftale"]
  if "MM (= Mortens mellemregninger)" in wb.sheetnames:
    mm = wb["MM (= Mortens mellemregninger)"]
  else:
    mm = 0
  if "Støtteark" in wb.sheetnames:
    støtteark = wb["Støtteark"]
  return aftale,mm,støtteark

def get_grå_timer(aftale):
  vv_timer = 0
  for x in aftale["D"]:
    if x.value == True and x.row != 52:
      if aftale[f"H{x.row}"].value in grå:
        vv_timer += aftale[f"F{x.row}"].value*aftale[f"G{x.row}"].value
  return vv_timer / uger_pr_år

def get_blå_timer(aftale):
  #aftale must be a SLA excel workbook
  vv_timer = 0
  for x in aftale["D"]:
    if x.value == True:
      if aftale[f"H{x.row}"].value in blå:
        vv_timer += aftale[f"F{x.row}"].value*aftale[f"G{x.row}"].value
  return vv_timer / uger_pr_år  

def get_grøn_timer(aftale):
  #aftale must be a SLA excel workbook
  vv_timer = 0
  for x in aftale["D"]:
    if x.value == True:
      if aftale[f"H{x.row}"].value in grøn:
        vv_timer += aftale[f"F{x.row}"].value*aftale[f"G{x.row}"].value
  return vv_timer / uger_pr_år

def get_CTS_money(aftale):
  cts_money = 0
  for x in aftale["D"]:
    if x.value == True:
      if str(aftale[f"H{x.row}"].value) in cts:
        cts_money += aftale[f"I{x.row}"].value
  return cts_money

def get_SC_money(aftale):
  if aftale["J20"].value == None:
    return -1
  return aftale["J20"].value

def get_feje_timer(aftale):
  if aftale["D52"].value == False:
    return -1
  return aftale["F52"].value*aftale["G52"].value

def load_wb(wb_path):
  wb = get_wb(wb_path)
  return wb

# x = get_blå_timer(aftale)
# print(f"På denne ejendom har den blå medarbejder {x/52:.2f} timer om ugen")

"""### Pre-requisites"""

blå = ["Blå medarbejder"]
cts = ["1-4 billeder", "5-10 billeder", "11-20 billeder", "21+ billeder"]
grå = ["Grå medarbejder"]
grøn = ["Gartner","Gartner m. lille rider"]
sc = ["DEAS Service Center"]
uger_pr_år = 50
accepted_xls = [".xls", ".xlsm", ".xlsx", ".csv"]
# wb_path = r"\\file01\redirection$\Users\jael\Desktop\FS SLA Skabelon.xlsm"
# wb = get_wb(wb_path)
# aftale,mm,støtteark = get_worksheets(wb)
# print(r"\\file01\redirection$\Users\jael\Skrivebord\FS SLA Skabelon.xlsm")

"""## The GUI (using tkinter)"""
if __name__ == "__main__":
  #PRE-REQUIISITES

  root = tk.Tk()

  canvas1 = tk.Canvas(root,width = 300, height = 400)
  canvas1.pack()

  label = tk.StringVar()
  label.set("No file is selected")
  tk.Label(root,textvariable = label).pack()

  def callback():
    global aftale
    global filename
    global label
    wb_path = fd.askopenfilename()
    filename, file_ext = os.path.splitext(wb_path)
    if file_ext in accepted_xls:
      wb = get_wb(wb_path)
    else:
      label.set("File chosen is not Excel file")
      return
    aftale,mm,støtteark = get_worksheets(wb)
    label.set(f"File chosen is:\n{filename.split('/')[-1]+file_ext}")
    # T = tk.Label(root,text = f"File chosen is:\n{filename.split('/')[-1]+file_ext}")
    # T.pack()
    return aftale,mm,støtteark,wb,wb_path

  button_file = tk.Button(root, text="Load file",command= callback)
  canvas1.create_window(50,20,window=button_file)
  
  
  ### BLÅ VV TIMER
  def get_blue():
    label1 = tk.Label(root,text=f"Timer/uge: {get_blå_timer(aftale):.2f}", fg="blue", font=("helvetica",12,"bold"))
    canvas1.create_window(200,70,window=label1)
  button_blue = tk.Button(text="Vis Blå timer/uge",command=get_blue,bg="brown",fg="white")
  canvas1.create_window(50,70,window=button_blue)
  ### GRÅ VV TIMER
  def get_grey():
    label1 = tk.Label(root,text=f"Timer/uge: {get_grå_timer(aftale):.2f}", fg="grey", font=("helvetica",12,"bold"))
    canvas1.create_window(200,120,window=label1)
  button_grey = tk.Button(text="Vis Grå timer/uge",command=get_grey,bg="brown",fg="white")
  canvas1.create_window(50,120,window=button_grey)
  ### GARTNER TIMER
  def get_green():
    label1 = tk.Label(root,text=f"Timer/uge: {get_grøn_timer(aftale):.2f}", fg="green", font=("helvetica",12,"bold"))
    canvas1.create_window(200,170,window=label1)
  button_green = tk.Button(text="Vis Grøn timer/uge",command=get_green,bg="brown",fg="white")
  canvas1.create_window(50,170,window=button_green)
  ### CTS
  def get_cts():
    label1 = tk.Label(root,text=f"Pr. år: {get_CTS_money(aftale):.2f} dkk", fg="black", font=("helvetica",12,"bold"))
    canvas1.create_window(200,220,window=label1)
  button_cts = tk.Button(text="Vis CTS penge",command=get_cts,bg="brown",fg="white")
  canvas1.create_window(50,220,window=button_cts)
  ### SC
  def get_sc():
    label1 = tk.Label(root,text=f"Pr. år: {get_SC_money(aftale):.2f} dkk", fg="black", font=("helvetica",12,"bold"))
    canvas1.create_window(200,270,window=label1)
  button_sc = tk.Button(text="Vis SC penge",command=get_sc,bg="brown",fg="white")
  canvas1.create_window(50,270,window=button_sc)

  def get_feje():
    label1 = tk.Label(root,text=f"Timer/uge: {get_feje_timer(aftale)/uger_pr_år:.2f}", fg="red", font=("helvetica",12,"bold"))
    canvas1.create_window(200,320,window=label1)
  button_feje = tk.Button(text="Vis Feje timer/uge",command=get_feje,bg="brown",fg="white")
  canvas1.create_window(50,320,window=button_feje)


  root.title("FS SLA")
  if os.path.exists(r"C:\Users\jael\Anaconda3\DLLs\py.ico"):
    root.iconbitmap(r"C:\Users\jael\Anaconda3\DLLs\py.ico")


  root.mainloop()